openapi: 3.1.0
info:
  title: DEMOSTRIPE API
  description: |
    This project is developed to manage the functionality of the gym.
  contact:
    email: contacto@iwa.com.mx
  version: 0.0.1
  x-logo:
    url: 'https://iwa.com.mx/images/logo%20iwa_full%20color%20b.png?crc=3800781517'
    backgroundColor: '#FFFFFF'
    altText: 'IWA Consolti'

servers:
  - url: 'http://{baseUrl}:{port}/projects'
    description: local
    variables:
      port:
        enum:
          - '8080'
        default: '8080'
      baseUrl:
        default: localhost

tags:
  - name: users
  - name: permissions
  - name: user-permissions

paths:
  '/users':
    post:
      tags:
        - users
      summary: Add a new user
      description: |
        This endpoint allows you to create a new user using a form.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './requests.yaml#/components/schemas/NewUserRequest'
      responses:
        201:
          $ref: './responses.yaml#/components/responses/UserResponse'
        400:
          $ref: './responses.yaml#/components/responses/BadRequest'
        401:
          $ref: './responses.yaml#/components/responses/Unauthorized'
        403:
          $ref: './responses.yaml#/components/responses/Forbidden'
        409:
          $ref: './responses.yaml#/components/responses/Conflict'
        500:
          $ref: './responses.yaml#/components/responses/InternalServerError'

  '/users/{userId}':
    get:
      tags:
        - users
      summary: Find user by id
      description: |
        This endpoint allows you to search for a specific user based on their ID. The user ID must be provided in the URL parameter.
      operationId: getUser
      parameters:
        - $ref: './parameters.yaml#/components/parameters/UserId'
      responses:
        200:
          $ref: './responses.yaml#/components/responses/UserResponse'
        401:
          $ref: './responses.yaml#/components/responses/Unauthorized'
        403:
          $ref: './responses.yaml#/components/responses/Forbidden'
        404:
          $ref: './responses.yaml#/components/responses/NotFound'
        500:
          $ref: './responses.yaml#/components/responses/InternalServerError'


    put:
      tags:
        - users
      summary: Update user
      description: |
        This endpoint allows you to update an existing user based on their ID using a form.
      operationId: updateUser
      parameters:
        - $ref: './parameters.yaml#/components/parameters/UserId'
      requestBody:
        description: UserForm contains properties of the user to be processed.
        required: true
        content:
          application/json:
            schema:
              $ref: './requests.yaml#/components/schemas/UpdateUserRequest'
      responses:
        200:
          $ref: './responses.yaml#/components/responses/UserResponse'
        400:
          $ref: './responses.yaml#/components/responses/BadRequest'
        401:
          $ref: './responses.yaml#/components/responses/Unauthorized'
        403:
          $ref: './responses.yaml#/components/responses/Forbidden'
        404:
          $ref: './responses.yaml#/components/responses/NotFound'
        500:
          $ref: './responses.yaml#/components/responses/InternalServerError'

    delete:
      tags:
        - users
      summary: Delete users
      description: |
        This endpoint allows to delete an existing user based on its ID. The user ID must be provided in the URL parameter. 
      operationId: deleteUser
      parameters:
        - $ref: './parameters.yaml#/components/parameters/UserId'
      responses:
        204:
          $ref: './responses.yaml#/components/responses/Successful'
        401:
          $ref: './responses.yaml#/components/responses/Unauthorized'
        403:
          $ref: './responses.yaml#/components/responses/Forbidden'
        404:
          $ref: './responses.yaml#/components/responses/NotFound'
        409:
          $ref: './responses.yaml#/components/responses/Conflict'
        500:
          $ref: './responses.yaml#/components/responses/InternalServerError'

  /users/{userId}/permissions:
    post:
      tags:
        - user-permissions
      summary: Add permissions to a user
      description: |
        This endpoint allows you to assign specific permissions to an existing user based on their ID. The user ID must be provided in the URL parameter. 
      operationId: addPermissions
      parameters:
        - $ref: './parameters.yaml#/components/parameters/UserId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: './requests.yaml#/components/schemas/UserPermissionRequest'
      responses:
        200:
          $ref: './responses.yaml#/components/responses/Successful'
        401:
          $ref: './responses.yaml#/components/responses/Unauthorized'
        403:
          $ref: './responses.yaml#/components/responses/Forbidden'
        500:
          $ref: './responses.yaml#/components/responses/InternalServerError'

    get:
      tags:
        - user-permissions
      summary: Get all permissions by user
      description: |
        This endpoint allows to obtain all permissions assigned to an existing user based on its ID. The user ID must be provided in the URL parameter. 
      operationId: getAllPermissionsByUserId
      parameters:
        - $ref: './parameters.yaml#/components/parameters/UserId'
      responses:
        200:
          $ref: './responses.yaml#/components/responses/PermissionsResponse'
        401:
          $ref: './responses.yaml#/components/responses/Unauthorized'
        403:
          $ref: './responses.yaml#/components/responses/Forbidden'
        404:
          $ref: './responses.yaml#/components/responses/NotFound'
        409:
          $ref: './responses.yaml#/components/responses/Conflict'
        500:
          $ref: './responses.yaml#/components/responses/InternalServerError'

  '/permissions':
    get:
      tags:
        - permissions
      summary: Get all permissions
      description: |
        It provides a complete list of all available permissions. 
        Permissions can be used to assign privileges and control access to certain functionalities.
      operationId: findAllPermissions
      responses:
        200:
          $ref: './responses.yaml#/components/responses/PermissionsResponse'
        401:
          $ref: './responses.yaml#/components/responses/Unauthorized'
        500:
          $ref: './responses.yaml#/components/responses/InternalServerError'
